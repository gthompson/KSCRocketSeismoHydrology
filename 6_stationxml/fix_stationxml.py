from obspy import read_inventory
from obspy.core.inventory.inventory import Inventory
from obspy.core.inventory.network import Network
from obspy.core.inventory.station import Station
from obspy.core.inventory.channel import Channel

from collections import defaultdict
import sys

def merge_and_patch_stationxml(input_file, output_file):
    inv = read_inventory(input_file)
    patched_inv = Inventory(networks=[], source=inv.source or "Patched by ObsPy")

    for net in inv:
        station_dict = defaultdict(list)
        for sta in net:
            key = (sta.code, str(sta.start_date), str(sta.end_date))
            station_dict[key].append(sta)

        new_net = Network(code=net.code, description=net.description)
        for (code, start, end), stations in station_dict.items():
            # Start with the first station block
            base = stations[0].copy()

            # Merge in any additional channels or site info
            for other in stations[1:]:
                # Fill in missing site name/description
                if not base.site.name and other.site.name:
                    base.site.name = other.site.name
                if not base.site.description and other.site.description:
                    base.site.description = other.site.description
                # Merge in new channels
                existing_ids = {(c.code, c.location_code) for c in base}
                for chan in other:
                    if (chan.code, chan.location_code) not in existing_ids:
                        base.channels.append(chan)

            # Ensure site name and description exist
            if not base.site.name:
                base.site.name = f"AUTO_NAME_{code}"
            if not base.site.description:
                base.site.description = f"Autogenerated site description for {code}"

            new_net.stations.append(base)
        patched_inv.networks.append(new_net)

    patched_inv.write(output_file, format="STATIONXML")
    print(f"[SUCCESS] Merged and patched StationXML saved to:\n  {output_file}")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python merge_and_patch_stationxml.py input.xml output.xml")
        sys.exit(1)

    merge_and_patch_stationxml(sys.argv[1], sys.argv[2])
